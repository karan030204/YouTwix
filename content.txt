main task #1
Images -> store krna

User Upload Images -> Temporarily store on our server -> then using process we can deploy to cloudinary 3rd party services 
Or 
User Upload Images -> Upload to Cloudinary directly 



devdependencies -> development ke time pe jo dependencies jo hoti h wahan pe use hoga 
main production pe kuch problem nahi ayegi
Production pe nahi leke jayenge isko 
--save-dev or -D ( dev-dependencies install krni h jisko aapko production pe leke nahi jana h)


Automatic server ko reload krne ke liye ek utility h nodemon usse install krdi h woh index.js name ki file ko auto reload kr dega after making changes in the index.js file but hava me to karega nahi woh changes usko batana to padega usko kaise batayenge ham scripts me jaake 
"dev" : "nodemon src/index.js"

dotenv aur modulejs ka ek panga chalta h to woh dekhna hoga
we cannot use import('dotenv')
we need to use required vaala syntax which is commonjs par hamne type module krdi h but chalega



.prettierignore kis kis file me mereko prettier ko apply nahi krna
- environment variables include mat karna

STATUSCODES
- status codes ka already company me hota h predefined memo me likha hota h error iss status code me bhejenge ye sab
- startups me hame khudko banana padega

IMAGES AND VIDEOS
- ye sab 3rd Party API Use karenge ham cloudinary ha kuch bhi aur woh link de dega hame 

(IMP FEATURE)
Watch History - ek bada hi next level complex banata h project ko
mongoose-aggregate-paginate-v2 --- It allows us to write aggregation queries ( true power mongoDb ) - production ( aggregation pipeline ) - For writing complex queries

//Sessions aur cookies dono use krenge ham

Steps for writing backend in express : 

- data modelling or object modelling
- setup code ( till prettier, gitignore) with dependencies and everything
- db setup and connection 
- middlewares and configuration ( cors and cookieParser and BuiltIn Middleware )
- utility for db function - Wrapper Function
- (inside utility only) custom error (class Error) (standardised err response)
- ApiError.js
- ApiResponse.js
- User models and Video Models and JWT ( mongoose-aggregate-paginate-v2) - bcrypt(hash pwd)
